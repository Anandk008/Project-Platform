{"version":3,"file":"static/js/224.f5125dcc.chunk.js","mappings":"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","sources":["constants/images/index.js","components/form/inputPassword.js","views/auth/login/index.js"],"sourcesContent":["import Logo from \"./enigma-logo-transperent.png\";\nimport Background from \"./background.png\";\n\nexport const Images = {\n  Logo: Logo,\n  Background: Background,\n};\n","import React, { useState } from \"react\";\nimport { CFormInput, CInputGroup, CInputGroupText } from \"@coreui/react\";\nimport { BsShieldLock, BsEye, BsEyeSlash } from \"react-icons/bs\";\n// import CIcon from \"@coreui/icons-react\";\n\nconst InputPassword = ({ value, setValue, placeholder = \"Password\" }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  return (\n    <CInputGroup>\n      {/* <CInputGroupPrepend> */}\n      <CInputGroupText>\n        <BsShieldLock />\n      </CInputGroupText>\n      {/* </CInputGroupPrepend> */}\n      <CFormInput\n        value={value}\n        onChange={(e) => {\n          setValue(e.target.value);\n        }}\n        type={showPassword ? \"\" : \"password\"}\n        placeholder={placeholder}\n        autoComplete=\"current-password\"\n      />\n      <CInputGroupText\n        key={showPassword}\n        onClick={() => setShowPassword(!showPassword)}\n        style={{\n          cursor: \"pointer\",\n        }}\n      >\n        {!showPassword ? <BsEye /> : <BsEyeSlash />}\n      </CInputGroupText>\n    </CInputGroup>\n  );\n};\n\nexport default InputPassword;\n","import React, { useState } from \"react\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport { Images } from \"../../../constants/images\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroupText,\n  CInputGroup,\n  CRow,\n} from \"@coreui/react\";\nimport { AiOutlineUser } from \"react-icons/ai\";\nimport InputPassword from \"../../../components/form/inputPassword\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const [userId, setUserId] = useState(localStorage.getItem(\"userId\"));\n\n  if (userId) {\n    return <Navigate replace to=\"/dashboard\" />;\n  }\n\n  return (\n    <div\n      className=\"flex-row hide-text-selection\"\n      style={{\n        backgroundImage: `url(${Images.Background})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      <CContainer className=\"\" style={{ height: \"100vh\" }}>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\" className=\"align-items-center\">\n            <CCardGroup style={{ marginTop: \"25vh\" }}>\n              <CCard className=\"p-4\" style={{ backgroundColor: \"#A4C2A8\" }}>\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <AiOutlineUser />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        autoComplete=\"username\"\n                        value={id}\n                        onChange={(e) => {\n                          setId(e.target.value);\n                        }}\n                      />\n                    </CInputGroup>\n                    <div className=\"mb-4\">\n                      <InputPassword value={password} setValue={setPassword} />\n                    </div>\n\n                    {errors?.message ? (\n                      <CRow className=\"mb-4\">\n                        <CCol xs=\"12\">\n                          <span style={{ color: \"red\", fontWeight: 500 }}>\n                            {errors?.message}\n                          </span>\n                        </CCol>\n                      </CRow>\n                    ) : null}\n                    <CRow>\n                      <CCol xs=\"4\">\n                        <CButton\n                          onClick={() => {}}\n                          color=\"primary\"\n                          className=\"px-4\"\n                        >\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs=\"8\">\n                        <CButton\n                          color=\"link\"\n                          className=\"float-right\"\n                          onClick={() => {\n                            navigate({\n                              pathname: \"/forgotPassword\",\n                              state: {\n                                forget: true,\n                              },\n                            });\n                          }}\n                        >\n                          Forgot password?\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard\n                className=\"text-white py-5 d-md-down-none\"\n                style={{ width: \"44%\", backgroundColor: \"#5A5A66\" }}\n              >\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <div>\n                      <img\n                        src={Images.Logo}\n                        alt=\"sd\"\n                        style={{\n                          height: 100,\n                          width: 100,\n                          transform: \"scale(1)\",\n                          marginBottom: 16,\n                        }}\n                      />\n                    </div>\n                    <h2>Enigma</h2>\n                    <p>\n                      Your one stop solution for easy tracking and efficient\n                      management of projects. Collaboration among students,\n                      universities and organizations made easy.\n                    </p>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["Images","Logo","Background","value","setValue","placeholder","useState","showPassword","setShowPassword","onChange","e","target","type","autoComplete","onClick","style","cursor","navigate","useNavigate","id","setId","password","setPassword","errors","localStorage","getItem","userId","replace","to","className","backgroundImage","backgroundSize","backgroundPosition","height","md","marginTop","backgroundColor","message","xs","color","fontWeight","pathname","state","forget","width","src","alt","transform","marginBottom"],"sourceRoot":""}